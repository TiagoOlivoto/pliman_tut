imgs <- image_import(pattern = "proc", path = tempdir())
image_combine(imgs)
# Chunk 63
# percent of the injured area
100 - 86432 / 99186 * 100
# Chunk 64: sc1
#| out-width: "100%"
imgs <-
image_import(c("simple.jpg", "compound.jpg")) |>
image_horizontal()
image_combine(imgs)
# Chunk 65: sc2
#| out-width: "100%"
simple <- imgs$simple.jpg
sarea <- analyze_objects(simple,
watershed = FALSE,
contour_size = 4,
marker = "id")
# Chunk 66: sc3
#| out-width: "100%"
sarea <-
analyze_objects(simple,
watershed = FALSE,
marker = "id",
show_chull = TRUE,
contour_size = 6)
sarea_cor <- get_measures(sarea, dpi = 48.65)
sarea_cor |> t()
# Chunk 67: sc4
#| out-width: "100%"
compound <- imgs$compound.jpg
carea <-
analyze_objects(compound,
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id")
# Chunk 68: sc5
#| out-width: "100%"
carea <-
analyze_objects(compound,
watershed = FALSE,
show_segmentation = TRUE,
show_contour = FALSE,
show_chull = TRUE,
marker = "id")
carea_cor <- get_measures(carea, dpi = 49.5)
carea_cor |> t()
#| out-width: "100%"
carea <-
analyze_objects(compound,
watershed = FALSE,
show_segmentation = TRUE,
show_contour = FALSE,
show_chull = TRUE,
marker = "id")
carea_cor <- get_measures(carea, dpi = 49.5)
carea_cor |> t()
carea_cor |> t()
#| out-width: "100%"
shp <- image_import("mosaic.jpg", plot = TRUE)
# aligned <- image_align(shp)
aligned <- image_rotate(shp, angle = 82.591)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:3953,
height = 1350:1625,
plot = TRUE)
anal <-
analyze_objects_shp(cropped,
cols = 26,
rows = 1,
index = "HUE",
object_index = "DGCI",
plot = FALSE,
watershed = FALSE)
shp <- image_import("mosaic.jpg", plot = TRUE)
# aligned <- image_align(shp)
aligned <- image_rotate(shp, angle = 82.591)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:3953,
height = 1350:1625,
plot = TRUE)
anal <-
analyze_objects_shp(cropped,
prepare = FALSE,
cols = 26,
rows = 1,
index = "HUE",
object_index = "DGCI",
plot = FALSE,
watershed = FALSE)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2953,
height = 1350:1625,
plot = TRUE)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2853,
height = 1350:1625,
plot = TRUE)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2953,
height = 1350:1625,
plot = TRUE)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2890,
height = 1350:1625,
plot = TRUE)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2900,
height = 1350:1625,
plot = TRUE)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2920,
height = 1350:1625,
plot = TRUE)
anal <-
analyze_objects_shp(cropped,
prepare = FALSE,
ncol = 13,
nrow = 1,
index = "HUE",
object_index = "DGCI",
plot = FALSE,
watershed = FALSE)
plot(cropped)
plot(anal$shapefiles)
plot_measures(anal, measure = "coverage")
anal <-
analyze_objects_shp(cropped,
prepare = FALSE,
ncol = 13,
nrow = 1,
index = "HUE",
object_index = "DGCI",
plot = FALSE,
watershed = FALSE)
plot(cropped)
plot(anal$final_image_masked)
plot(anal$shapefiles)
plot_measures(anal, measure = "coverage")
plot_measures(anal, measure = "coverage", vjust = -30)
plot_measures(anal, measure = "coverage", vjust = -300)
plot_measures(anal, measure = "coverage", vjust = 60, col = "black")
plot_measures(anal, measure = "coverage", vjust = 120, col = "black")
plot_measures(anal, measure = "coverage", vjust = 160, col = "black")
anal <-
analyze_objects_shp(cropped,
prepare = FALSE,
ncol = 13,
nrow = 1,
index = "HUE",
object_index = "DGCI",
plot = FALSE,
watershed = FALSE)
plot(anal$final_image_masked)
plot(anal$shapefiles)
plot_measures(anal, measure = "coverage", vjust = 160, col = "black")
library(pliman)
imgs <- image_import(pattern = "img", path = "fourier")
names(imgs) <- paste0("ind", 1:9)
conts <-
object_contour(imgs,
index = "B",
watershed = FALSE,
plot = FALSE)
d <- efourier(conts$ind1$`2`, nhm = 2)
conts
d <- efourier(conts$ind1[[1]], nhm = 2)
d <- efourier(conts$ind1, nhm = 2)
d <- efourier(conts)
imgs <- image_import(pattern = "img", path = "fourier")
names(imgs) <- paste0("ind", 1:9)
conts <-
object_contour(imgs,
index = "B",
watershed = FALSE,
plot = FALSE)
plot(imgs$ind1)
plot(imgs$ind3)
plot(imgs$ind4)
plot(imgs$ind9)
plot(imgs$ind1)
plot(imgs$ind17)
plot(imgs$ind7)
n5 <- efourier_inv(d, nharm = 5)
n10 <- efourier_inv(d, nharm = 10)
n30 <- efourier_inv(d, nharm = 30)
d <- efourier(conts, nharm = 30)
n5 <- efourier_inv(d, nharm = 5)
n10 <- efourier_inv(d, nharm = 10)
n30 <- efourier_inv(d, nharm = 30)
plot_contour(n5)
d <- efourier(conts[[1]], nharm = 30)
n5 <- efourier_inv(d, nharm = 5)
n10 <- efourier_inv(d, nharm = 10)
n30 <- efourier_inv(d, nharm = 30)
plot(imgs$ind7)
plot_contour(n5)
d <- efourier(conts[[7]], nharm = 30)
n5 <- efourier_inv(d, nharm = 5)
n10 <- efourier_inv(d, nharm = 10)
n30 <- efourier_inv(d, nharm = 30)
plot(imgs$ind7)
plot_contour(n5)
plot(imgs$ind7)
plot_contour(n5)
plot_contour(n10, col = "red")
plot_contour(n30, col = "blue")
img <- image_import("changes.png", path = "fourier")
cont <-
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
plot_polygon(cont)
df <- efourier(cont)
efourier_coefs(df)
df |>
efourier_norm() |>
efourier_coefs()
conts <-
object_contour(imgs,
index = "B",
watershed = FALSE,
plot = FALSE)
ef <- efourier_coefs(conts, nharm = 30)
ef <- efourier(conts, nharm = 30)
ef <- efourier(conts, nharm = 30) |> efourier_norm()
ef |>
efourier_coefs()
coefs <-
ef |>
efourier_coefs()
coefs <-
ef |>
efourier_coefs() |>
transform(specie = c(rep(paste0("specie", 1:3), each = 3)))
library(factoextra)
library(FactoMineR)
pca <- PCA(coefs, quali.sup = 61, graph = FALSE)
fviz_pca_ind(pca, habillage = 61, repel = TRUE)
ef
coefs
View(coefs)
coefs <-
ef |>
efourier_coefs() |>
transform(specie = c(rep(paste0("specie", 1:3), each = 3))) |>
select(-1)
View(coefs)
coefs <-
ef |>
efourier_coefs() |>
mutate(specie = c(rep(paste0("specie", 1:3), each = 3)), .after = 1) |>
select(-1)
View(coefs)
library(factoextra)
library(FactoMineR)
pca <- PCA(coefs, quali.sup = 1, graph = FALSE)
fviz_pca_ind(pca, habillage = 1, repel = TRUE)
image_combine(imgs)
#| out-width: "100%"
conts <-
object_contour(imgs,
index = "B",
watershed = FALSE,
plot = FALSE)
ef <- efourier(conts, nharm = 30) |> efourier_norm()
coefs <-
ef |>
efourier_coefs() |>
mutate(specie = c(rep(paste0("specie", 1:3), each = 3)), .after = 1) |>
select(-1)
library(factoextra)
library(FactoMineR)
pca <- PCA(coefs, quali.sup = 1, graph = FALSE)
fviz_pca_ind(pca, habillage = 1, repel = TRUE)
image_combine(imgs)
#| out-width: "100%"
imgs <- image_import(pattern = "img", path = "fourier")
names(imgs) <- paste0("ind", 1:9)
conts <-
object_contour(imgs,
index = "B",
watershed = FALSE,
plot = FALSE)
d <- efourier(conts[[7]], nharm = 30)
n5 <- efourier_inv(d, nharm = 5)
n10 <- efourier_inv(d, nharm = 10)
n30 <- efourier_inv(d, nharm = 30)
plot(imgs$ind7)
plot_contour(n5)
plot_contour(n10, col = "red")
plot_contour(n30, col = "blue")
img <- image_import("changes.png", path = "fourier")
cont <-
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
plot_polygon(cont)
df <- efourier(cont)
df |> efourier_coefs()
#| out-width: "100%"
img <- image_import("changes.png", path = "fourier")
cont <-
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
plot_polygon(cont)
efourier(cont)
df |> efourier_coefs()
df |>
efourier_coefs() |>
t()
df |>
efourier_coefs()
df |>
efourier_coefs() |>
select(-1) |>
t()
df |>
efourier_norm() |>
efourier_coefs() |>
select(-1) |>
t()
df |>
efourier_coefs()
df |>
efourier_norm() |>
efourier_coefs()
conts <-
object_contour(imgs,
index = "B",
watershed = FALSE,
plot = FALSE)
ef <- efourier(conts, nharm = 30) |> efourier_norm()
coefs <-
ef |>
efourier_coefs() |>
mutate(specie = c(rep(paste0("specie", 1:3), each = 3)), .after = 1) |>
select(-1)
#| out-width: "100%"
img <- image_import("distance.png", path = "fourier")
cont <-
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
plot_polygon(cont, aspect_ratio = 1)
conts <-
object_contour(cont,
index = "B",
watershed = FALSE,
plot = FALSE)
conts <-
object_contour(cont,
index = "B",
watershed = FALSE,
plot = FALSE)
#| out-width: "100%"
img <- image_import("distance.png", path = "fourier")
cont <-
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
ef <-
conts |>
efourier(nharm = 30) |>
efourier_norm()
ef
ef <-
cont |>
efourier(nharm = 30) |>
efourier_norm()
#| out-width: "100%"
img <- image_import("distance.png", path = "fourier")
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
cont <-
object_contour(img,
index = "B",
watershed = FALSE,
plot = FALSE)
plot_polygon(cont, aspect_ratio = 1)
coefs <-
cont |>
efourier(nharm = 30) |>
efourier_norm()
pca <- PCA(coefs, graph = FALSE)
coefs <-
cont |>
efourier(nharm = 30) |>
efourier_norm() |>
select(-1)
coefs <-
cont |>
efourier(nharm = 30) |>
efourier_norm() |>
efourier_coefs() |>
select(-1)
pca <- PCA(coefs, graph = FALSE)
fviz_pca_ind(pca, repel = TRUE)
# distance
distance <- dist(coefs) |> hclust()
fviz_dend(distance, k = 3)
desc_ide <- coefs[1,]
desc_objs <- coefs[-1,]
# compute the differences between each object and the ideotype
gen_ide <- sweep(desc_objs, 2, desc_ide, "-")
coefs
desc_ide <- coefs[1,]
desc_objs <- coefs[-1,]
sweep(desc_objs, 2, desc_ide, "-")
coefs <-
cont |>
efourier(nharm = 30) |>
efourier_norm() |>
efourier_coefs() |>
select(-1) |>
as.matrix()
pca <- PCA(coefs, graph = FALSE)
fviz_pca_ind(pca, repel = TRUE)
desc_ide <- coefs[1,]
desc_objs <- coefs[-1,]
# compute the differences between each object and the ideotype
gen_ide <- sweep(desc_objs, 2, desc_ide, "-")
distances <-
apply(gen_ide, 1, function(x){sqrt(sum(x^2))}) %>%
sort(decreasing = FALSE)
distances
img <- image_pliman("objects_300dpi.jpg", plot = TRUE)
img_res <- analyze_objects(img, marker = "id")
leaves <- image_import("ref_leaves.jpg", plot = TRUE)
#| out-width: "100%"
leaves <- image_import("ref_leaves.jpg", plot = TRUE)
af <-
analyze_objects(leaves,
index = "B-G",
watershed = FALSE,
filter = 3,
col_background = "black",
marker = "id")
af <-
analyze_objects(leaves,
index = "B-G",
watershed = FALSE,
filter = 3,
col_background = "black",
show_original = FALSE,
marker = "id")
af <-
analyze_objects(leaves,
index = "B-G",
watershed = FALSE,
filter = 3,
# col_background = "black",
show_original = FALSE,
marker = "id")
lines(1:10, 1:10)
plot(1:10, 1:10))
plot(1:10, 1:10)
plot(1:10, 1:10, type = "l")
shp <- image_import("mosaic.jpg", plot = TRUE)
# aligned <- image_align(shp)
aligned <- image_rotate(shp, angle = 82.591)
library(pliman)
shp <- image_import("mosaic.jpg", plot = TRUE)
setwd("E:/Desktop/UFSC/cursos/pliman_tut")
shp <- image_import("mosaic.jpg", plot = TRUE)
# aligned <- image_align(shp)
aligned <- image_rotate(shp, angle = 82.591)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2920,
height = 1350:1625,
plot = TRUE)
shp <- image_import("mosaic.jpg", plot = TRUE)
setwd("E:/Desktop/UFSC/cursos/pliman_tut/imgs")
shp <- image_import("mosaic.jpg", plot = TRUE)
# aligned <- image_align(shp)
aligned <- image_rotate(shp, angle = 82.591)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
width = 1900:2920,
height = 1350:1625,
plot = TRUE)
image_export(cropped, "field_mosaic.jpg")
?analyze_objects_shp
shp <- image_import("mosaic.jpg", plot = TRUE)
library(pliman)
shp <- image_import("mosaic.jpg", plot = TRUE)
# aligned <- image_align(shp)
aligned <- image_rotate(shp, angle = 82.591)
# cropped <- image_crop(aligned, plot = TRUE)
cropped <- image_crop(aligned,
viewer = "map",
# width = 1900:2920,
# height = 1350:1625,
plot = TRUE)
image_export(cropped, "field_mosaic.jpg")
