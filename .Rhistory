summary_index(vicia ,
index = "R",
cut_point = 0.25,
select_higher = TRUE)
count2 <-
object_contour(img2,
index = "B",
show_image = FALSE)
summary_index$ids
ids2 <- summary_index$ids
plot_contour(count2, id = ids2, col = "red")
plot_contour(count2, col = "red")
setwd("E:/Desktop/UFSC/cursos/pliman_tut/imgs")
library(pliman)
img2 <- image_import("vicia.jpg", plot = TRUE) |> image_resize(10)
vicia <-
analyze_objects(img2,
index = "B",
object_index = "R",
show_image = FALSE,
parallel = TRUE)
summary_index <-
summary_index(vicia ,
index = "R",
cut_point = 0.25,
select_higher = TRUE)
count2 <-
object_contour(img2,
index = "B",
show_image = FALSE)
ids2 <- summary_index$ids
plot_contour(count2, col = "red")
img2 <- image_import("vicia.jpg", plot = TRUE) |> image_resize(30)
vicia <-
analyze_objects(img2,
index = "B",
object_index = "R",
show_image = FALSE,
parallel = TRUE)
summary_index <-
summary_index(vicia ,
index = "R",
cut_point = 0.25,
select_higher = TRUE)
count2 <-
object_contour(img2,
index = "B",
show_image = FALSE)
ids2 <- summary_index$ids
plot_contour(count2, col = "red")
img2 <- image_import("vicia.jpg", plot = TRUE) |> image_resize(30)
vicia <-
analyze_objects(img2,
index = "B",
object_index = "R",
show_image = FALSE,
parallel = TRUE)
img2 <- image_import("vicia.jpg") |> image_resize(30)
img2 <- image_import("vicia.jpg") |> image_resize(30, plot = TRUE)
vicia <-
analyze_objects(img2,
index = "B",
object_index = "R",
show_image = FALSE,
parallel = TRUE)
summary_index <-
summary_index(vicia ,
index = "R",
cut_point = 0.25,
select_higher = TRUE)
count2 <-
object_contour(img2,
index = "B",
show_image = FALSE)
ids2 <- summary_index$ids
plot_contour(count2, col = "red")
img2 <- image_import("vicia.jpg")
vicia <-
analyze_objects(img2,
index = "B")
?image_segment_mask
img <- image_import("objects_300.jpg")
img <- image_import("objects_300.jpg", plot = TRUE)
image_segment_mask(img, shape = "d")
image_segment_mask(img,
size = 300,
shape = "d")
image_segment_mask(img,
size = 300,
shape = "box")
image_segment_mask(img,
size = 605,
shape = "box")
image_segment_mask(img,
size = 701,
shape = "box")
image_segment_mask(img,
size = 901,
shape = "box")
image_segment_mask(img,
size = 1201,
shape = "box")
image_segment_mask(img,
size = 1201,
rel_pos_y = 0.2
shape = "box")
image_segment_mask(img,
size = 1201,
rel_pos_y = 0.2,
shape = "box")
image_segment_mask(img,
size = 1201,
rel_pos_y = 0.6,
shape = "box")
image_segment_mask(img,
size = 1901,
rel_pos_y = 0.6,
shape = "box")
image_segment_mask(img,
size = 1301,
rel_pos_y = 0.6,
shape = "box")
image_segment_mask(img,
size = 1251,
rel_pos_y = 0.6,
shape = "box")
image_segment_mask(img,
size = 1231,
rel_pos_y = 0.6,
shape = "box")
image_segment_mask(img,
size = 1211,
rel_pos_y = 0.6,
shape = "box")
image_segment_mask(img,
size = 1211,
rel_pos_y = 0.6,
rel_pos_x = 0.1,
shape = "box")
image_segment_mask(img,
size = 1211,
rel_pos_y = 0.6,
rel_pos_x = 0,
shape = "box")
image_segment_mask(img,
size = 1211,
rel_pos_y = 0.6,
rel_pos_x = 0.05,
shape = "box")
image_segment_mask(img,
size = 1211,
rel_pos_y = 0.6,
rel_pos_x = 0.06,
shape = "box")
image_segment_mask(img,
size = 1211,
rel_pos_y = 0.6,
rel_pos_x = 0.07,
shape = "box")
image_segment_mask(img,
size = 1111,
rel_pos_y = 0.6,
rel_pos_x = 0.07,
shape = "box")
image_segment_mask(img,
size = 1201,
rel_pos_y = 0.6,
rel_pos_x = 0.07,
shape = "box")
image_segment_mask(img,
size = 1191,
rel_pos_y = 0.6,
rel_pos_x = 0.07,
shape = "box")
image_segment_mask(img,
size = 1191,
rel_pos_y = 0.6,
rel_pos_x = 0.08,
shape = "box")
image_segment_mask(img,
size = 1171,
rel_pos_y = 0.6,
rel_pos_x = 0.08,
shape = "box")
# Chunk 1
knitr::opts_knit$set(root.dir = "E:/Desktop/UFSC/cursos/pliman_tut/imgs")
# Chunk 3
library(pliman)
square <- draw_square(side = 1)
poly_area(square)
poly_perimeter(square)
# Chunk 4
shapes <- list(  side6 = draw_n_tagon(6, plot = FALSE),
side12 = draw_n_tagon(12, plot = FALSE),
side24 = draw_n_tagon(24, plot = FALSE),
side100 = draw_n_tagon(100, plot = FALSE),
side500 = draw_n_tagon(500, plot = FALSE),
side100 = draw_n_tagon(1000, plot = FALSE))
plot_polygon(shapes, merge = FALSE)
poly_area(shapes)
poly_perimeter(shapes)
# Chunk 5
leaves <- image_import("ref_leaves.jpg", plot = TRUE)
# getting the outline of objects
cont <- object_contour(leaves, watershed = FALSE)
# plotting the polygon
plot_polygon(cont)
# Chunk 6
cont <- cont[c("1", "3", "12", "24")]
plot_polygon(cont)
# Chunk 7
poly_area(cont)
# Chunk 8
poly_perimeter(cont)
# perimeter of a circle with radius 2
circle <- draw_circle(radius = 2, plot = FALSE)
poly_perimeter(circle)
# check the result
2*pi*2
# Chunk 9
dist <- poly_centdist(cont)
# stats for radius
mean_list(dist)
min_list(dist)
max_list(dist)
sd_list(dist)
# average radius of circle above
poly_centdist(circle) |> mean_list()
# Chunk 10
poly_lw(cont)
# Chunk 11
poly_circularity(cont)
# Chunk 12
poly_circularity_norm(cont)
# normalized circularity for different shapes
draw_square(plot =FALSE) |> poly_circularity_norm()
draw_circle(plot=FALSE) |> poly_circularity_norm()
# Chunk 13
poly_circularity_haralick(cont)
# Chunk 14
poly_convexity(cont)
# Chunk 15
poly_eccentricity(cont)
# Chunk 16
poly_elongation(cont)
# Chunk 17
poly_caliper(cont)
# Chunk 18
measures <- poly_measures(cont) |> round_cols()
t(measures)
# Chunk 19
(color_measures <- get_measures(measures, dpi = 50))
# Chunk 20
o2 <- cont[["3"]]
plot_polygon(o2)
# Chunk 21
rot <- poly_rotate(o2, angle = 45)
# Chunk 22
flipped <-
list(fx = poly_flip_x(o2),
fy = poly_flip_y(o2))
plot_polygon(flipped, merge = FALSE, aspect_ratio = 1)
# Chunk 23
# sample 50 coordinates
poly_sample(o2, n=10) |> plot_polygon()
# sample 10% of coordinates
poly_sample_prop(o2, prop = 0.1) |> plot_polygon()
# Chunk 24
smoothed <-
list( original = o2,
s1 = poly_smooth(o2, prop = 0.2, plot = FALSE),
s2 = poly_smooth(o2, prop = 0.1, plot = FALSE),
s1 = poly_smooth(o2, prop = 0.04, plot = FALSE)
)
plot_polygon(smoothed, merge = FALSE, ncol = 2, aspect_ratio = 1)
# Chunk 25
set.seed(1)
c1 <- draw_circle(n = 200, plot = FALSE)
c2 <- draw_circle(n = 200, plot = FALSE) |>
poly_jitter(noise_x = 100,
noise_y = 100,
plot = FALSE)
plot_polygon(list(c1, c2), merge = FALSE)
# Chunk 26
library(pliman)
library(tidyverse)
library(patchwork)
img <- image_pliman("objects_300dpi.jpg", plot = TRUE)
# Chunk 27
img_res <- analyze_objects(img, marker = "id")
# Chunk 28
get_measures(img_res ,
id = 1,
area ~ 100)
# Chunk 29
# number of pixels for the perimeter of the largest square
ls_px <- img_res$results$perimeter [1]
pixels_to_cm(px = ls_px , dpi = 300)
# Chunk 30
img_res_cor <- get_measures(img_res , dpi = 300)
t(img_res_cor)
object_contour(img) %>% # get the contour of objects
poly_mass() %>% # computes center of mass and minimum and maximum radii
plot_mass() # plot the measurements
potato <- image_pliman("samples.jpg", plot = TRUE)
potato <- image_pliman("samples.jpeg", plot = TRUE)
potato <- image_import("samples.jpg", plot = TRUE)
potato <- image_import("samples.jpeg", plot = TRUE)
getwd()
potato <- image_import("samples.png", plot = TRUE)
pot_meas <-
analyze_objects(potato,
watershed = FALSE,
marker = "id",
show_chull = TRUE) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "R",
watershed = FALSE,
marker = "id",
show_chull = TRUE) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "G",
watershed = FALSE,
marker = "id",
show_chull = TRUE) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "G",
watershed = FALSE,
marker = "id",
filter = FALSE,
show_chull = TRUE) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "G",
watershed = FALSE,
marker = "id",
filter = FALSE,
show_chull = F) # show the convex hull
image_index(potato)
pot_meas <-
analyze_objects(potato,
index = "B",
watershed = FALSE,
marker = "id",
filter = FALSE,
show_chull = F) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "B",
watershed = FALSE,
marker = "id",
filter = 10,
show_chull = F) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "B",
# watershed = FALSE,
marker = "id") # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "B",
# watershed = FALSE,
marker = "id",
filter = FALSE,
show_chull = F) # show the convex hull
pot_meas <-
analyze_objects(potato,
index = "B",
watershed = FALSE,
marker = "id",
filter = FALSE,
show_chull = F) # show the convex hull
pot_meas$results
leaves <- image_import("folhas.jpg", plot = TRUE)
leaves_meas <-
analyze_objects(leaves ,
watershed = FALSE,
col_background = "black")
leaves_cor <- get_measures(leaves_meas , dpi = 300)
t(leaves_cor)
potato <- image_import("samples.png", plot = TRUE)
potato <- image_import("samples.png", plot = TRUE)
pot_meas <-
analyze_objects(potato,
index = "B",
watershed = FALSE,
marker = "id",
show_chull = TRUE) # show the convex hull
t(pot_meas$results)
pot_meas$results
leaves <- image_import("folhas.jpg", plot = TRUE)
leaves_meas <-
analyze_objects(leaves ,
watershed = FALSE,
col_background = "black")
potato <- image_import("samples.png", plot = TRUE)
pot_meas <-
analyze_objects(potato,
index = "B",
watershed = FALSE,
marker = "id",
show_chull = TRUE) # show the convex hull
pot_meas$results
leaves <- image_import("folhas.jpg", plot = TRUE)
leaves_meas <-
analyze_objects(leaves ,
watershed = FALSE,
col_background = "black")
leaves_cor <- get_measures(leaves_meas , dpi = 300)
t(leaves_cor)
count <-
analyze_objects("grains",
show_segmentation = TRUE,
show_contour = FALSE,
marker = "id")
count$statistics
system.time(
list_res <- analyze_objects(pattern = "img_sb", show_image = FALSE)
)
# parallel processing
# 6 multiple sections (50% of my pc's cores)
system.time(
list_res <-
analyze_objects(pattern = "img_sb",
show_image = FALSE,
parallel = TRUE)
)
f0 <- image_import("fungo.png", plot = TRUE)
f0 <- image_import("fungo.jpg", plot = TRUE)
back <- pick_palette(f0)
fore <- pick_palette(f0)
res <-
analyze_objects(f0,
background = back,
foreground = fore,
watershed = FALSE)
res <-
analyze_objects(f0,
background = back,
foreground = fore,
watershed = FALSE,
filter = 30)
meas <- get_measures(res, dpi = 254)
plot_measures(meas,
col = "black",
measure = "area",
size = 2)
plot_measures(meas,
col = "black",
measure = "diameter",
size = 2)
plot_measures(meas,
col = "black",
measure = "diam",
size = 2)
meas
f0 <- image_import("fungo.jpg", plot = TRUE)
res <-
analyze_objects(f0,
my_index = "(G+B)^3-R",
watershed = FALSE,
filter = 30)
meas <- get_measures(res, dpi = 254)
plot_measures(meas,
col = "black",
measure = "diam_mean",
size = 2)
plot_mass(meas)
cont <- object_contour(f0,                   my_index = "(G+B)^3-R",
watershed = FALSE,
filter = 30)
cont <- object_contour(f0,
indx = "(G+B)^3-R",
watershed = FALSE,
filter = 30)
cont <- object_contour(f0,
index = "(G+B)^3-R",
watershed = FALSE,
filter = 30)
f0 <- image_import("fungo.jpg", plot = TRUE)
res <-
analyze_objects(f0,
my_index = "(G+B)^3-R",
watershed = FALSE,
filter = 30)
meas <- get_measures(res, dpi = 254)
plot_measures(meas,
col = "black",
measure = "diam_mean",
size = 2)
res <-
analyze_objects(f0,
my_index = "(G+B)^3-R",
watershed = FALSE,
filter = 30,
contour_size = 3,
contour_col = "black")
meas <- get_measures(res, dpi = 254)
plot_measures(meas,
col = "black",
measure = "diam_mean",
size = 2)
plot_measures(meas,
col = "white",
measure = "diam_mean",
size = 2)
760 / 430
940/1.76
fs::dir_tree("E:/Desktop/UFSC/cursos/pliman_tut/imgs", recurse = 1)
